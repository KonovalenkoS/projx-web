angular.module('projx', ['ngRoute'])
.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
    // routing definitions
    $routeProvider
        .when('/home', {
            templateUrl: '/app/views/home/home.html',
            controller: 'homeController'
        })
        .when('/forum', {
            templateUrl: '/app/views/forum/forum.html',
            controller: 'forumController'
        })
	.when('/apply', {
		templateUrl: 'app/views/apply/apply.html',
		controller: 'applyController'
	})
        .when('/profile/:email', {
            templateUrl: '/app/views/profile/profile.html',
            controller: 'profileController'
        })
        .when('/forum/thread/:threadId', {
            templateUrl: '/app/views/forum/thread/thread.html',
            controller: 'threadController'
        })
        .otherwise({
            redirectTo: '/home'
        });

        // remove # from URL
        $locationProvider.html5Mode({
            enabled: true,
            requireBase: false
        });
    }
])
.component('sidebar', {
    templateUrl: '/app/components/sidebar/sidebar.html',
    controller: 'sidebarController'
})
.component('footer', {
    templateUrl: '/app/components/footer/footer.html'
})
.component('threadCard', {
    templateUrl: '/app/components/thread-card/thread-card.html',
    controller: 'threadCardController'
});

angular.module('projx').factory('user', function($http) {
    var userService = {};
    var currentUser;

    userService.get = function (cb) {
        $http.get('/api/user/current').then(function (response) {
            if (response.data === '') currentUser = null;
            else currentUser = response.data;
            cb(currentUser);
        });
    }

    return userService;
});

angular.module('projx').controller('sidebarController', function ($scope, $location, $http, user) {
    $scope.go = function (path) {
        $location.path(path);
    }

    $scope.login = function () {
        $http.post('/api/user/loginurl').then(function (response) {
            window.location = response.data;
        }, function (response) {
            swal('Oops...', 'An error occurred...', 'error');
        });
    }

    $scope.logout = function () {
        $http.post('/api/user/logout').then(function (response) {
            window.location = '/';
        }, function (response) {
            window.location = '/';
        });
    }

    user.get(function (currentUser) {
        $scope.user = currentUser;
    });
});

angular.module('projx').controller('threadCardController', function ($scope) {
    // TODO: Needs as input the thread ID, and perhaps the truncate cutoffs.

    $scope.truncate = function (text, cutoff) {
        if (text.length > cutoff) {
            return text.substring(0, cutoff) + '...';
        } else {
            return text;
        }
    }

    // Should be moved outside component.
    var fakeThreads = [{
        'id': '1',
        'author': 'vfazel',
        'date': 'Jun 8, 2016',
        'title': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.',
        'content': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.'
    }, {
        'id': '12',
        'author': 'vfazel',
        'date': 'Jun 8, 2016',
        'title': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.',
        'content': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.'
    }, {
        'id': '123',
        'author': 'vfazel',
        'date': 'Jun 8, 2016',
        'title': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.',
        'content': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.'
    }, {
        'id': '1234',
        'author': 'vfazel',
        'date': 'Jun 8, 2016',
        'title': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.',
        'content': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.'
    }, {
        'id': '12345',
        'author': 'vfazel',
        'date': 'Jun 8, 2016',
        'title': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.',
        'content': 'Why can\'t I get my header to fit in this card? I want to write a very long header here.'
    }];

    $scope.thread = fakeThreads[0];
});

angular.module('projx').controller('applyController', function ($scope, $http, $location, $routeParams) {

    // page title
    $scope.title = 'apply';
    $scope.newMember = '';
    $scope.agreed = false;

    $http.get('/api/user/current').then(function (response) {
        $scope.user = response.data;

        $scope.project = {
            name: undefined,
	    visibility: undefined,
            public: {
            	// team: [$scope.user.email],
		team: ['test1', 'test2'],
                projectPitch: undefined,
                projectDescription: undefined,
                teamDescription: undefined,
            },
            private: {
                // primary: $scope.user.email,
		primary: 'myemail@mit.edu',
                budgetAmount: undefined,
                budgetUsed: undefined,
                budgetBreakdown: undefined,
                otherFunding: undefined,
                timeline: undefined,
                point: undefined,
		batch: undefined,
		status: undefined
            },
            admin: {
                comments: undefined
            }
        }
    });

    $scope.addMember = function () {
        if ($scope.newMember.toLowerCase().endsWith('@mit.edu')) {
            if ($scope.project.team.indexOf($scope.newMember.toLowerCase()) === -1) {
                $scope.project.team.push($scope.newMember.toLowerCase());
            } else {
                sweetAlert("Already added", "Team member is already on the team.", "warning");
            }
            $scope.newMember = '';
        } else {
            sweetAlert("Invalid email", "Please enter a valid email that ends with @mit.edu.", "error");
        }
    }

    $scope.removeMember = function (member) {
        if (member === $scope.user.email) {
            sweetAlert("Oops", "You can't remove yourself from the team!", "error");
        } else {
            $scope.project.team.splice($scope.project.team.indexOf(member), 1);
        }
    }

    $scope.submit = function () {
        if (!$scope.agreed) {
        sweetAlert('Please agree to the terms and conditions');
        } else {
            $http.post('/api/project', {
                'project': $scope.project
            }).then(function (response) {
                $location.path('/home');
                sweetAlert("Project created", "Project created and saved! Come back to edit anytime before the deadline.", "success");
            }, function (response) {
                console.log(response);
                sweetAlert("Error saving project", response.data, "error");
            });
        }
    }

});

angular.module('projx').controller('forumController', function ($scope) {});

angular.module('projx').controller('homeController', function () {});

angular.module('projx').controller('profileController', function () {});

angular.module('projx').controller('threadController', function ($scope, $routeParams) {
    $scope.id = $routeParams.threadId;

    $scope.thread = {
        'title': 'thread title goes here'
    }

    $scope.posts = [
        {
            'content': 'This is the post content. I am posting about a question for my project that is designed to build something for something and hopefully it\'ll end up being useful for someone',
            'author': 'vfazel',
            'date': '8:21pm, Jun 23, 2016'
        },
        {
            'content': 'This is the post content. I am posting about a question for my project that is designed to build something for something and hopefully it\'ll end up being useful for someone',
            'author': 'vfazel',
            'date': '8:21pm, Jun 23, 2016'
        },
        {
            'content': 'This is the post content. I am posting about a question for my project that is designed to build something for something and hopefully it\'ll end up being useful for someone',
            'author': 'vfazel',
            'date': '8:21pm, Jun 23, 2016'
        },
        {
            'content': 'This is the post content. I am posting about a question for my project that is designed to build something for something and hopefully it\'ll end up being useful for someone',
            'author': 'vfazel',
            'date': '8:21pm, Jun 23, 2016'
        }
    ]
});
